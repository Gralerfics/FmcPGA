$date
  Sun Apr  9 19:20:05 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module fixed_float_types $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module math_real $end
$upscope $end
$scope module constants $end
$upscope $end
$scope module types $end
$upscope $end
$scope module block_collision_tb $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$comment block_p is not handled $end
$comment hit_p is not handled $end
$comment hit_dir is not handled $end
$comment uv_coord is not handled $end
$var reg 1 ! valid $end
$scope module uut $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$comment block_p is not handled $end
$comment hit_p is not handled $end
$comment hit_dir is not handled $end
$comment uv_coord is not handled $end
$var reg 1 " valid $end
$comment hit_p_yz1 is not handled $end
$comment hit_p_yz2 is not handled $end
$comment hit_p_xz1 is not handled $end
$comment hit_p_xz2 is not handled $end
$comment hit_p_xy1 is not handled $end
$comment hit_p_xy2 is not handled $end
$var reg 1 # valid_yz1 $end
$var reg 1 $ valid_yz2 $end
$var reg 1 % valid_xz1 $end
$var reg 1 & valid_xz2 $end
$var reg 1 ' valid_xy1 $end
$var reg 1 ( valid_xy2 $end
$var reg 1 ) able_yz1 $end
$var reg 1 * able_yz2 $end
$var reg 1 + able_xz1 $end
$var reg 1 , able_xz2 $end
$var reg 1 - able_xy1 $end
$var reg 1 . able_xy2 $end
$var reg 32 / xi_n[8:-23] $end
$var reg 32 0 xi_p[8:-23] $end
$var reg 32 1 yi_n[8:-23] $end
$var reg 32 2 yi_p[8:-23] $end
$var reg 32 3 zi_n[8:-23] $end
$var reg 32 4 zi_p[8:-23] $end
$scope module plane_collision_yz1 $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$var reg 32 5 plane_val[8:-23] $end
$comment hit_p is not handled $end
$var reg 1 6 valid $end
$upscope $end
$scope module plane_collision_yz2 $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$var reg 32 7 plane_val[8:-23] $end
$comment hit_p is not handled $end
$var reg 1 8 valid $end
$upscope $end
$scope module plane_collision_xz1 $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$var reg 32 9 plane_val[8:-23] $end
$comment hit_p is not handled $end
$var reg 1 : valid $end
$upscope $end
$scope module plane_collision_xz2 $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$var reg 32 ; plane_val[8:-23] $end
$comment hit_p is not handled $end
$var reg 1 < valid $end
$upscope $end
$scope module plane_collision_xy1 $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$var reg 32 = plane_val[8:-23] $end
$comment hit_p is not handled $end
$var reg 1 > valid $end
$upscope $end
$scope module plane_collision_xy2 $end
$comment start_p is not handled $end
$comment end_p is not handled $end
$var reg 32 ? plane_val[8:-23] $end
$comment hit_p is not handled $end
$var reg 1 @ valid $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
1"
1#
1$
1%
1&
1'
1(
0)
1*
0+
1,
0-
0.
b00000000000000000000000000000000 /
b00111111100000000000000000000000 0
b00000000000000000000000000000000 1
b00111111100000000000000000000000 2
b00000000000000000000000000000000 3
b00111111100000000000000000000000 4
b00000000000000000000000000000000 5
16
b00111111100000000000000000000000 7
18
b00000000000000000000000000000000 9
1:
b00111111100000000000000000000000 ;
1<
b00000000000000000000000000000000 =
1>
b00111111100000000000000000000000 ?
1@
